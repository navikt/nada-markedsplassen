// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: workstations.sql

package gensql

import (
	"context"
)

const createWorkstationsJob = `-- name: CreateWorkstationsJob :exec
INSERT INTO workstations_jobs ("user_ident", "job_id")
VALUES ($1, $2)
`

type CreateWorkstationsJobParams struct {
	UserIdent string
	JobID     int64
}

func (q *Queries) CreateWorkstationsJob(ctx context.Context, arg CreateWorkstationsJobParams) error {
	_, err := q.db.ExecContext(ctx, createWorkstationsJob, arg.UserIdent, arg.JobID)
	return err
}

const deleteWorkstationsJob = `-- name: DeleteWorkstationsJob :exec
DELETE FROM workstations_jobs
WHERE user_ident = $1
`

func (q *Queries) DeleteWorkstationsJob(ctx context.Context, userIdent string) error {
	_, err := q.db.ExecContext(ctx, deleteWorkstationsJob, userIdent)
	return err
}

const getWorkstationsJob = `-- name: GetWorkstationsJob :one
SELECT
    user_ident, job_id
FROM
    workstations_jobs
WHERE
    user_ident = $1
`

func (q *Queries) GetWorkstationsJob(ctx context.Context, userIdent string) (WorkstationsJob, error) {
	row := q.db.QueryRowContext(ctx, getWorkstationsJob, userIdent)
	var i WorkstationsJob
	err := row.Scan(&i.UserIdent, &i.JobID)
	return i, err
}
