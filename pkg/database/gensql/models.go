// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0

package gensql

import (
	"database/sql"
	"database/sql/driver"
	"encoding/json"
	"fmt"
	"time"

	"github.com/google/uuid"
	"github.com/sqlc-dev/pqtype"
)

type AccessRequestStatusType string

const (
	AccessRequestStatusTypePending  AccessRequestStatusType = "pending"
	AccessRequestStatusTypeApproved AccessRequestStatusType = "approved"
	AccessRequestStatusTypeDenied   AccessRequestStatusType = "denied"
)

func (e *AccessRequestStatusType) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = AccessRequestStatusType(s)
	case string:
		*e = AccessRequestStatusType(s)
	default:
		return fmt.Errorf("unsupported scan type for AccessRequestStatusType: %T", src)
	}
	return nil
}

type NullAccessRequestStatusType struct {
	AccessRequestStatusType AccessRequestStatusType
	Valid                   bool // Valid is true if AccessRequestStatusType is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullAccessRequestStatusType) Scan(value interface{}) error {
	if value == nil {
		ns.AccessRequestStatusType, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.AccessRequestStatusType.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullAccessRequestStatusType) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.AccessRequestStatusType), nil
}

type DatasourceType string

const (
	DatasourceTypeBigquery DatasourceType = "bigquery"
)

func (e *DatasourceType) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = DatasourceType(s)
	case string:
		*e = DatasourceType(s)
	default:
		return fmt.Errorf("unsupported scan type for DatasourceType: %T", src)
	}
	return nil
}

type NullDatasourceType struct {
	DatasourceType DatasourceType
	Valid          bool // Valid is true if DatasourceType is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullDatasourceType) Scan(value interface{}) error {
	if value == nil {
		ns.DatasourceType, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.DatasourceType.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullDatasourceType) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.DatasourceType), nil
}

type PiiLevel string

const (
	PiiLevelSensitive  PiiLevel = "sensitive"
	PiiLevelAnonymised PiiLevel = "anonymised"
	PiiLevelNone       PiiLevel = "none"
)

func (e *PiiLevel) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = PiiLevel(s)
	case string:
		*e = PiiLevel(s)
	default:
		return fmt.Errorf("unsupported scan type for PiiLevel: %T", src)
	}
	return nil
}

type NullPiiLevel struct {
	PiiLevel PiiLevel
	Valid    bool // Valid is true if PiiLevel is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullPiiLevel) Scan(value interface{}) error {
	if value == nil {
		ns.PiiLevel, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.PiiLevel.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullPiiLevel) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.PiiLevel), nil
}

type RiverJobState string

const (
	RiverJobStateAvailable RiverJobState = "available"
	RiverJobStateCancelled RiverJobState = "cancelled"
	RiverJobStateCompleted RiverJobState = "completed"
	RiverJobStateDiscarded RiverJobState = "discarded"
	RiverJobStatePending   RiverJobState = "pending"
	RiverJobStateRetryable RiverJobState = "retryable"
	RiverJobStateRunning   RiverJobState = "running"
	RiverJobStateScheduled RiverJobState = "scheduled"
)

func (e *RiverJobState) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = RiverJobState(s)
	case string:
		*e = RiverJobState(s)
	default:
		return fmt.Errorf("unsupported scan type for RiverJobState: %T", src)
	}
	return nil
}

type NullRiverJobState struct {
	RiverJobState RiverJobState
	Valid         bool // Valid is true if RiverJobState is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullRiverJobState) Scan(value interface{}) error {
	if value == nil {
		ns.RiverJobState, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.RiverJobState.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullRiverJobState) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.RiverJobState), nil
}

type Dashboard struct {
	ID  uuid.UUID
	Url string
}

type Dataproduct struct {
	ID               uuid.UUID
	Name             string
	Description      sql.NullString
	Group            string
	Created          time.Time
	LastModified     time.Time
	TsvDocument      interface{}
	Slug             string
	TeamkatalogenUrl sql.NullString
	TeamContact      sql.NullString
	TeamID           uuid.NullUUID
}

type DataproductView struct {
	DpID             uuid.UUID
	DpName           string
	DpDescription    sql.NullString
	DpGroup          string
	DpCreated        time.Time
	DpLastModified   time.Time
	DpSlug           string
	TeamkatalogenUrl sql.NullString
	TeamContact      sql.NullString
	TeamID           uuid.NullUUID
	TeamName         sql.NullString
	PaName           sql.NullString
	PaID             uuid.NullUUID
	DsDpID           uuid.NullUUID
	DsID             uuid.NullUUID
	DsName           sql.NullString
	DsDescription    sql.NullString
	DsCreated        sql.NullTime
	DsLastModified   sql.NullTime
	DsSlug           sql.NullString
	DsKeywords       []string
}

type DataproductWithTeamkatalogenView struct {
	ID               uuid.UUID
	Name             string
	Description      sql.NullString
	Group            string
	Created          time.Time
	LastModified     time.Time
	TsvDocument      interface{}
	Slug             string
	TeamkatalogenUrl sql.NullString
	TeamContact      sql.NullString
	TeamID           uuid.NullUUID
	TeamName         sql.NullString
	PaName           sql.NullString
	PaID             uuid.NullUUID
}

type Dataset struct {
	ID                       uuid.UUID
	Name                     string
	Description              sql.NullString
	Pii                      PiiLevel
	Created                  time.Time
	LastModified             time.Time
	Type                     DatasourceType
	TsvDocument              interface{}
	Slug                     string
	Repo                     sql.NullString
	Keywords                 []string
	DataproductID            uuid.UUID
	AnonymisationDescription sql.NullString
	TargetUser               sql.NullString
}

type DatasetAccess struct {
	ID              uuid.UUID
	DatasetID       uuid.UUID
	Subject         string
	Granter         string
	Expires         sql.NullTime
	Created         time.Time
	Revoked         sql.NullTime
	AccessRequestID uuid.NullUUID
	Owner           string
}

type DatasetAccessRequest struct {
	ID                   uuid.UUID
	DatasetID            uuid.UUID
	Subject              string
	Owner                string
	PollyDocumentationID uuid.NullUUID
	LastModified         time.Time
	Created              time.Time
	Expires              sql.NullTime
	Status               AccessRequestStatusType
	Closed               sql.NullTime
	Granter              sql.NullString
	Reason               sql.NullString
}

type DatasetAccessView struct {
	AccessID                  uuid.UUID
	AccessSubject             string
	AccessOwner               string
	AccessGranter             string
	AccessExpires             sql.NullTime
	AccessCreated             time.Time
	AccessRevoked             sql.NullTime
	AccessDatasetID           uuid.UUID
	AccessRequestID           uuid.NullUUID
	AccessRequestOwner        sql.NullString
	AccessRequestSubject      sql.NullString
	AccessRequestLastModified sql.NullTime
	AccessRequestCreated      sql.NullTime
	AccessRequestExpires      sql.NullTime
	AccessRequestStatus       NullAccessRequestStatusType
	AccessRequestClosed       sql.NullTime
	AccessRequestGranter      sql.NullString
	AccessRequestReason       sql.NullString
	PollyID                   uuid.NullUUID
	PollyName                 sql.NullString
	PollyUrl                  sql.NullString
	PollyExternalID           sql.NullString
}

type DatasetView struct {
	DpGroup                    sql.NullString
	DsID                       uuid.UUID
	DsName                     string
	DsDescription              sql.NullString
	DsCreated                  time.Time
	DsLastModified             time.Time
	DsSlug                     string
	Pii                        PiiLevel
	DsKeywords                 []string
	DsRepo                     sql.NullString
	DsTargetUser               sql.NullString
	DsAnonymisationDescription sql.NullString
	BqID                       uuid.UUID
	BqCreated                  time.Time
	BqLastModified             time.Time
	BqExpires                  sql.NullTime
	BqDescription              sql.NullString
	BqMissingSince             sql.NullTime
	PiiTags                    pqtype.NullRawMessage
	BqProject                  string
	BqDataset                  string
	BqTableName                string
	BqTableType                string
	PseudoColumns              []string
	BqSchema                   pqtype.NullRawMessage
	DsDpID                     uuid.UUID
	MbDatabaseID               sql.NullInt32
	MbDeletedAt                sql.NullTime
}

type DatasourceBigquery struct {
	DatasetID     uuid.UUID
	ProjectID     string
	Dataset       string
	TableName     string
	Schema        pqtype.NullRawMessage
	LastModified  time.Time
	Created       time.Time
	Expires       sql.NullTime
	TableType     string
	Description   sql.NullString
	PiiTags       pqtype.NullRawMessage
	MissingSince  sql.NullTime
	ID            uuid.UUID
	IsReference   bool
	PseudoColumns []string
	Deleted       sql.NullTime
}

type HttpCache struct {
	ID                int32
	Endpoint          string
	ResponseBody      []byte
	CreatedAt         time.Time
	LastTriedUpdateAt time.Time
}

type InsightProduct struct {
	ID               uuid.UUID
	Name             string
	Description      sql.NullString
	Creator          string
	Created          time.Time
	LastModified     time.Time
	Type             string
	TsvDocument      interface{}
	Link             string
	Keywords         []string
	Group            string
	TeamkatalogenUrl sql.NullString
	TeamID           uuid.NullUUID
}

type InsightProductWithTeamkatalogenView struct {
	ID               uuid.UUID
	Name             string
	Description      sql.NullString
	Creator          string
	Created          time.Time
	LastModified     time.Time
	Type             string
	TsvDocument      interface{}
	Link             string
	Keywords         []string
	Group            string
	TeamkatalogenUrl sql.NullString
	TeamID           uuid.NullUUID
	TeamName         sql.NullString
	PaName           sql.NullString
}

type JoinableView struct {
	ID      uuid.UUID
	Owner   string
	Name    string
	Created time.Time
	Expires sql.NullTime
	Deleted sql.NullTime
}

type JoinableViewsDatasource struct {
	ID             uuid.UUID
	JoinableViewID uuid.UUID
	DatasourceID   uuid.UUID
	Deleted        sql.NullTime
}

type MetabaseDashboard struct {
	ID                uuid.UUID
	Name              string
	Description       sql.NullString
	Group             string
	PublicDashboardID uuid.UUID
	MetabaseID        int32
	CreatedBy         string
	Created           time.Time
	LastModified      time.Time
	TsvDocument       interface{}
	Keywords          []string
	TeamkatalogenUrl  sql.NullString
	TeamID            uuid.NullUUID
}

type NadaToken struct {
	Team  string
	Token uuid.UUID
}

type OpenMetabaseMetadatum struct {
	DatasetID     uuid.UUID
	DatabaseID    sql.NullInt32
	DeletedAt     sql.NullTime
	SyncCompleted sql.NullTime
}

type PollyDocumentation struct {
	ID         uuid.UUID
	ExternalID string
	Name       string
	Url        string
}

type RestrictedMetabaseMetadatum struct {
	DatabaseID        sql.NullInt32
	PermissionGroupID sql.NullInt32
	SaEmail           string
	CollectionID      sql.NullInt32
	DeletedAt         sql.NullTime
	DatasetID         uuid.UUID
	SyncCompleted     sql.NullTime
	SaPrivateKey      []byte
}

type RiverClient struct {
	ID        string
	CreatedAt time.Time
	Metadata  json.RawMessage
	PausedAt  sql.NullTime
	UpdatedAt time.Time
}

type RiverClientQueue struct {
	RiverClientID    string
	Name             string
	CreatedAt        time.Time
	MaxWorkers       int64
	Metadata         json.RawMessage
	NumJobsCompleted int64
	NumJobsRunning   int64
	UpdatedAt        time.Time
}

type RiverJob struct {
	ID           int64
	State        RiverJobState
	Attempt      int16
	MaxAttempts  int16
	AttemptedAt  sql.NullTime
	CreatedAt    time.Time
	FinalizedAt  sql.NullTime
	ScheduledAt  time.Time
	Priority     int16
	Args         json.RawMessage
	AttemptedBy  []string
	Errors       []json.RawMessage
	Kind         string
	Metadata     json.RawMessage
	Queue        string
	Tags         []string
	UniqueKey    []byte
	UniqueStates interface{}
	PartitionKey sql.NullString
}

type RiverJobDeadLetter struct {
	ID           int64
	State        RiverJobState
	Attempt      int16
	MaxAttempts  int16
	AttemptedAt  sql.NullTime
	CreatedAt    time.Time
	FinalizedAt  sql.NullTime
	ScheduledAt  time.Time
	Priority     int16
	Args         json.RawMessage
	AttemptedBy  []string
	Errors       []json.RawMessage
	Kind         string
	Metadata     json.RawMessage
	Queue        string
	Tags         []string
	UniqueKey    []byte
	UniqueStates interface{}
	PartitionKey sql.NullString
}

type RiverJobSequence struct {
	ID        int64
	Key       string
	CreatedAt time.Time
}

type RiverLeader struct {
	ElectedAt time.Time
	ExpiresAt time.Time
	LeaderID  string
	Name      string
}

type RiverPeriodicJob struct {
	ID        string
	CreatedAt time.Time
	NextRunAt time.Time
	UpdatedAt time.Time
}

type RiverProducer struct {
	ID         int64
	ClientID   string
	QueueName  string
	MaxWorkers int32
	Metadata   json.RawMessage
	PausedAt   sql.NullTime
	CreatedAt  time.Time
	UpdatedAt  time.Time
}

type RiverQueue struct {
	Name      string
	CreatedAt time.Time
	Metadata  json.RawMessage
	PausedAt  sql.NullTime
	UpdatedAt time.Time
}

type Search struct {
	ElementID    uuid.UUID
	ElementType  string
	Description  sql.NullString
	Keywords     interface{}
	Group        string
	TeamID       uuid.NullUUID
	Created      time.Time
	LastModified time.Time
	TsvDocument  interface{}
}

type Session struct {
	Token       string
	AccessToken string
	Email       string
	Name        string
	Created     time.Time
	Expires     time.Time
}

type Story struct {
	ID               uuid.UUID
	Name             string
	Creator          string
	Created          time.Time
	LastModified     time.Time
	Description      string
	Keywords         []string
	TeamkatalogenUrl sql.NullString
	TeamID           uuid.NullUUID
	Group            string
}

type StoryWithTeamkatalogenView struct {
	ID               uuid.UUID
	Name             string
	Creator          string
	Created          time.Time
	LastModified     time.Time
	Description      string
	Keywords         []string
	TeamkatalogenUrl sql.NullString
	TeamID           uuid.NullUUID
	Group            string
	TeamName         sql.NullString
	PaName           sql.NullString
}

type Tag struct {
	ID     uuid.UUID
	Phrase string
}

type TeamProject struct {
	Team       string
	Project    string
	GroupEmail string
}

type TkProductArea struct {
	ID       uuid.UUID
	Name     sql.NullString
	AreaType sql.NullString
}

type TkTeam struct {
	ID            uuid.UUID
	ProductAreaID uuid.NullUUID
	Name          sql.NullString
}

type WorkstationsActivityHistory struct {
	ID         uuid.UUID
	NavIdent   string
	CreatedAt  time.Time
	Action     string
	InstanceID sql.NullString
}

type WorkstationsConfigHistory struct {
	ID                uuid.UUID
	NavIdent          string
	CreatedAt         time.Time
	WorkstationConfig json.RawMessage
}

type WorkstationsOnpremAllowlistHistory struct {
	ID        uuid.UUID
	NavIdent  string
	CreatedAt time.Time
	Hosts     []string
}

type WorkstationsUrlList struct {
	ID          uuid.UUID
	NavIdent    string
	CreatedAt   time.Time
	ExpiresAt   time.Time
	Url         string
	Duration    string
	Description string
}

type WorkstationsUrlListHistory struct {
	ID                   uuid.UUID
	NavIdent             string
	CreatedAt            time.Time
	UrlList              string
	DisableGlobalUrlList bool
}

type WorkstationsUrlListUserSetting struct {
	ID                     uuid.UUID
	NavIdent               string
	DisableGlobalAllowList bool
}
