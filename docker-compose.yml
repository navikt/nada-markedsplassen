services:
  db:
    image: postgres:12
    restart: always
    environment:
      POSTGRES_USER: nada-backend
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: nada
    command: ["postgres", "-c", "log_statement=all", "-c", "wal_level=logical"]
    ports:
      - "5432:5432"
    networks:
      - metanet1

  adminer:
    image: adminer
    restart: always
    ports:
      - "8081:8080"
    networks:
      - metanet1

  gcs:
    image: fsouza/fake-gcs-server:1.44
    restart: always
    ports:
      - "8082:4443"
    entrypoint: ["/bin/sh", "-c", "mkdir -p /storage/nada-quarto-storage-dev && /bin/fake-gcs-server -scheme http -public-host localhost:8082"]
    networks:
      - metanet1

  smtp4dev:
    image: rnwood/smtp4dev:v3
    restart: always
    ports:
      # Change the number before : to the port the web interface should be accessible on
      - '5003:80'
      # Change the number before : to the port the SMTP server should be accessible on
      - '5001:25'
      # Change the number before : to the port the IMAP server should be accessible on
      - '5002:143'
    volumes:
      # This is where smtp4dev stores the database..
      - smtp4dev-data:/smtp4dev
    environment:
      # Uncomment to customise these settings
      # This is not a complete list of the available settings.
      # See the documentation in appsettings.json for a full list.

      #Specifies the virtual path from web server root where SMTP4DEV web interface will be hosted. e.g. "/" or "/smtp4dev"
      #- ServerOptions__BasePath=/smtp4dev

      #Specifies the URLs the web UI will use inside the container.
      - ServerOptions__Urls=http://*:80

      #Specifies the server hostname. Used in auto-generated TLS certificate if enabled.
      - ServerOptions__HostName=smtp4dev

      #Locks settings from being changed by user via web interface
      #- ServerOptions__LockSettings=true

      #Specifies the path where the database will be stored relative to APPDATA env var on Windows or XDG_CONFIG_HOME on non-Windows. Specify "" to use an in memory database.
      #- ServerOptions__Database=database.db

      #Specifies the number of messages to keep
      #- ServerOptions__NumberOfMessagesToKeep=100

      #Specifies the number of sessions to keep
      #- ServerOptions__NumberOfSessionsToKeep=100

      #Specifies the TLS mode to use. None=Off. StartTls=On demand if client supports STARTTLS. ImplicitTls=TLS as soon as connection is established.
      #- ServerOptions__TlsMode=None

      #Specifies the TLS certificate to use if TLS is enabled/requested. Specify "" to use an auto-generated self-signed certificate (then see console output on first startup)
      #- ServerOptions__TlsCertificate=

      #Sets the name of the SMTP server that will be used to relay messages or "" if messages should not be relayed
      #- RelayOptions__SmtpServer=

      #Sets the port number for the SMTP server used to relay messages.
      #- RelayOptions__SmtpPort=25

      #Specifies a comma separated list of recipient addresses for which messages will be relayed. An empty list means that no messages are relayed.
      #- RelayOptions__AllowedEmailsString=

      #Specifies the address used in MAIL FROM when relaying messages. (Sender address in message headers is left unmodified). The sender of each message is used if not specified.
      #- RelayOptions__SenderAddress=

      #The username for the SMTP server used to relay messages. If "" no authentication is attempted.
      #- RelayOptions__Login=

      #The password for the SMTP server used to relay messages
      #- RelayOptions__Password=

      #Specifies the port the IMAP server will listen on - allows standard email clients to view/retrieve messages
      #"ServerOptions__ImapPort"=143

  metabase:
    image: europe-north1-docker.pkg.dev/nada-prod-6977/nada-north/metabase:${METABASE_VERSION}
    container_name: metabase
    hostname: metabase
    platform: linux/amd64
    volumes:
      - metabase-data:/usr/src/metabase-data
    ports:
      - "8083:3000"
    environment:
      MB_DB_TYPE: h2
      MB_DB_FILE: /usr/src/metabase-data/metabase.db
      MB_ENABLE_PASSWORD_LOGIN: true
      MB_PREMIUM_EMBEDDING_TOKEN: ${MB_PREMIUM_EMBEDDING_TOKEN}
    networks:
      - metanet1
    healthcheck:
      test: curl --fail -I http://localhost:3000/api/health || exit 1
      interval: 15s
      timeout: 5s
      retries: 5

  bq:
    image: europe-north1-docker.pkg.dev/nada-prod-6977/nada-north/nada-backend-mocks:${MOCKS_VERSION}
    container_name: bq
    hostname: bq
    platform: linux/amd64
    volumes:
      - ${PWD}/resources/metabase:/opt/metabase/
    ports:
      - "8084:8084"
    networks:
      - metanet1
    command:
      - /app/bin/bq
      - -project
      - test
      - -port
      - "8084"
      - -data
      - /opt/metabase/data.yaml

  tk:
    image: europe-north1-docker.pkg.dev/nada-prod-6977/nada-north/nada-backend-mocks:${MOCKS_VERSION}
    container_name: tk
    platform: linux/amd64
    hostname: tk
    volumes:
      - ${PWD}/resources/teamkatalogen:/opt/teamkatalogen
    ports:
      - "8087:8080"
    networks:
      - metanet1
    command:
      - /app/bin/tk
      - -port
      - "8080"
      - -data
      - /opt/teamkatalogen/fake-data.json

  nc:
    image: europe-north1-docker.pkg.dev/nada-prod-6977/nada-north/nada-backend-mocks:${MOCKS_VERSION}
    container_name: nc
    platform: linux/amd64
    hostname: nc
    volumes:
      - ${PWD}/resources/naisconsole:/opt/naisconsole
    ports:
      - "8086:8080"
    networks:
      - metanet1
    command:
      - /app/bin/nc
      - -port
      - "8080"
      - -data
      - /opt/naisconsole/fake-response.json

  sa:
    image: europe-north1-docker.pkg.dev/nada-prod-6977/nada-north/nada-backend-mocks:${MOCKS_VERSION}
    container_name: sa
    platform: linux/amd64
    hostname: sa
    ports:
      - "8088:8080"
    networks:
      - metanet1
    command:
      - /app/bin/sa
      - -port
      - "8080"

  ws:
    image: europe-north1-docker.pkg.dev/nada-prod-6977/nada-north/nada-backend-mocks:${MOCKS_VERSION}
    container_name: ws
    platform: linux/amd64
    hostname: ws
    ports:
      - "8090:8080"
    networks:
      - metanet1
    command:
      - /app/bin/ws
      - -port
      - "8080"

  swp:
    image: europe-north1-docker.pkg.dev/nada-prod-6977/nada-north/nada-backend-mocks:${MOCKS_VERSION}
    container_name: swp
    platform: linux/amd64
    hostname: swp
    ports:
      - "8091:8080"
    networks:
      - metanet1
    command:
      - /app/bin/swp
      - -port
      - "8080"

  crm:
    image: europe-north1-docker.pkg.dev/nada-prod-6977/nada-north/nada-backend-mocks:${MOCKS_VERSION}
    container_name: crm
    platform: linux/amd64
    hostname: crm
    ports:
      - "8092:8080"
    networks:
      - metanet1
    command:
      - /app/bin/crm
      - -port
      - "8080"

volumes:
  metabase-data:
  smtp4dev-data:

networks:
  metanet1:
    driver: bridge
