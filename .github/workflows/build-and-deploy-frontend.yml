name: For call - build and deploy frontend

on:
  workflow_call:
    inputs:
      deploy_env:
        description: "Deploy environment, e.g. dev-only, prod-only, prod-and-dev"
        required: true
        type: string
      project_id: 
        description: "NAIS parameter"
        required: true
        type: string

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  build-and-push:
    permissions:
      contents: read
      packages: write
      id-token: write
    name: Build and push docker image
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}
    steps:
      - name: Show parameters
        run: |
          echo "environment: ${{ inputs.deploy_env }}"
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "22.14.0"
          registry-url: "https://npm.pkg.github.com"
          scope: '@navikt'
    
      - name: Install dependencies
        working-directory: frontend
        run: npm install --include=optional sharp
        env:
          NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}
    
      - name: npm build
        working-directory: frontend
        run: npm run build
    
      - name: Push docker image to GAR
        uses: nais/docker-build-push@v0
        id: docker-build-push
        with:
          team: nada
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          docker_context: frontend
          project_id: ${{ inputs.project_id }}
          image_suffix: frontend

  deploy-dev:
    name: Deploy to dev-gcp
    runs-on: ubuntu-latest
    needs: [build-and-push]
    if: ${{ github.actor != 'dependabot[bot]' && (inputs.deploy_env == 'dev-only' || inputs.deploy_env == 'prod-and-dev') }}
    env:
      IMAGE: ${{ needs.build.outputs.image }}
    steps:
      - uses: actions/checkout@v4
      - name: Deploy to dev
        uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: dev-gcp
          VAR: image=${{ needs.build-and-push.outputs.image }}
          RESOURCE: frontend/.nais/dev.yaml

  deploy-prod:
    name: Deploy to prod-gcp
    runs-on: ubuntu-latest
    needs: [build-and-push, deploy-dev]
    if: ${{ github.actor != 'dependabot[bot]' && (inputs.deploy_env == 'prod-only' || inputs.deploy_env == 'prod-and-dev') }}
    env:
      IMAGE: ${{ needs.build.outputs.image }}
    steps:
      - uses: actions/checkout@v4
      - name: Deploy to prod
        uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: prod-gcp
          VAR: image=${{ needs.build-and-push.outputs.image }}
          RESOURCE: frontend/.nais/prod.yaml,frontend/.nais/alert.yaml
