name: For call - deploy metabase

on:
  workflow_call:
    inputs:
      deploy_env:
        description: "Deploy environment, e.g. dev-only, prod-only, prod-and-dev"
        required: true
        type: string

permissions:
  contents: read
  id-token: write

jobs:
  deploy-dev:
    name: Deploy to dev-gcp
    runs-on: ubuntu-latest
    if: ${{ github.actor != 'dependabot[bot]' && (inputs.deploy_env == 'dev-only' || inputs.deploy_env == 'prod-and-dev') }}
    steps:
      - uses: actions/checkout@v4
      - name: Read Metabase Version
        id: read_metabase_version
        run: echo "METABASE_VERSION=$(cat .metabase_version)" >> $GITHUB_ENV
      - uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: dev-gcp
          RESOURCE: .nais/dev/metabase/gcp.yaml,.nais/dev/metabase/log-config.yaml
          VAR: version=${{ env.METABASE_VERSION }}
          VARS: .nais/vars.yaml

  deploy-prod:
    name: Deploy to prod-gcp
    runs-on: ubuntu-latest
    needs: [deploy-dev]
    if: ${{ github.actor != 'dependabot[bot]' && (inputs.deploy_env == 'prod-only' || inputs.deploy_env == 'prod-and-dev') }}
    steps:
      - uses: actions/checkout@v4
      - name: Read Metabase Version
        id: read_metabase_version
        run: echo "METABASE_VERSION=$(cat .metabase_version)" >> $GITHUB_ENV
      - uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: prod-gcp
          RESOURCE: .nais/prod/metabase/gcp.yaml,.nais/prod/metabase/log-config.yaml
          VAR: version=${{ env.METABASE_VERSION }}
          VARS: .nais/vars.yaml
          TIMEOUT: 15m
